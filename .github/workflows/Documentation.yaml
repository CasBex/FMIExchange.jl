name: Documentation

on:
  # manual trigger
  workflow_dispatch:
  # trigger from an other action
  repository_dispatch:
    types: [trigger-docu]

  pull_request:
  push:
    branches: 
      - main
    paths:
      - 'docs/**'
      - 'README.md'
      - '.github/workflows/Documentation.yml'
    tags: 
      - '*'

jobs:
  build_bb:
    runs-on: ubuntu-latest
    steps:
      - name: "get omc"
        run:
          sudo apt update

          sudo apt install ca-certificates curl gnupg

          sudo curl -fsSL http://build.openmodelica.org/apt/openmodelica.asc | sudo gpg --dearmor -o /usr/share/keyrings/openmodelica-keyring.gpg

          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/openmodelica-keyring.gpg] https://build.openmodelica.org/apt $(cat /etc/os-release | grep "\(UBUNTU\\|DEBIAN\\|VERSION\)_CODENAME" | sort | cut -d= -f 2 | head -1) stable" | sudo tee /etc/apt/sources.list.d/openmodelica.list

          sudo apt update

          sudo apt install -y --no-install-recommends omc

      - name: "get Modelica libs"
        run:

          git clone https://github.com/modelica/ModelicaStandardLibrary ~/.openmodelica/libraries/ModelicaStandardLibrary

          cd ~/.openmodelica/libraries/ModelicaStandardLibrary

          git checkout v4.0.0

          mv Modelica ~/.openmodelica/libraries/Modelica

      - name: Check out repository
        uses: actions/checkout@v4
      - name: Build step
        run:
          cd deps

          mkdir build

          cp src/* build -r

          cd build/BouncingBall

          omc buildFMU.mos;

          cd ../..
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: bbfmu
          path: deps/build/BouncingBall/BouncingBall2D.fmu
 
  render:
    runs-on: ubuntu-latest
    steps:
      - name: "Check out repository"
        uses: actions/checkout@v3
 
      - name: "Install IPE and SVG"
        run:
          sudo apt update

          sudo apt install -y ipe librsvg2-bin texlive-luatex texlive-latex-extra rename
      - name: "Render ipe graphics"
        run:
          cd docs/src/graphics

          find . -iname *.ipe -exec iperender -svg {} {}_render.svg \; -exec rsvg-convert --keep-aspect-ratio --zoom=1.83 -f svg {}_render.svg -o {}.svg \;

          rename 's/(.*).ipe.svg/$1.svg/' *

          rm *_render.svg

          tar -czf svg.tar.gz *.svg

          cd ../../..
          
      - name: "Upload artifacts"
        uses: actions/upload-artifact@v3
        with:
          name: svgs
          path: docs/src/graphics/svg.tar.gz

  build_docs:
    runs-on: ubuntu-latest
    needs:
      - render
      - build_bb
    env:
      JULIA_NUM_THREADS: $(nproc)
    steps:
      - name: "Check out repository"
        uses: actions/checkout@v3
      - name: "Download svg artifacts"
        uses: actions/download-artifact@v3
        with:
          name: svgs
          path: docs/src/graphics
      - name: "Extract svgs"
        run:
          tar -xzf docs/src/graphics/svg.tar.gz -C docs/src/graphics
      - name: "Create FMU directory"
        run: mkdir deps/fmu
      - name: "Download FMU artifacts"
        uses: actions/download-artifact@v3
        with:
          name: bbfmu
          path: deps/fmu
      - name: "Set up Julia"
        uses: julia-actions/setup-julia@v1
        with:
          version: '1.10'
          arch: x64
      - uses: actions/cache@v3
        env:
          cache-name: cache-artifacts
        with:
          path: ~/.julia/artifacts
          key: ${{ runner.os }}-doc-${{ env.cache-name }}-${{ hashFiles('**/Project.toml') }}
          restore-keys: |
            ${{ runner.os }}-doc-${{ env.cache-name }}-
            ${{ runner.os }}-doc-
            ${{ runner.os }}-
      - uses: julia-actions/julia-docdeploy@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
