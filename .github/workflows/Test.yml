name: Test

on:
  push:
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  build-fmus:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: build
        uses: docker://ghcr.io/${{ github.repository }}
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
            name: fmus
            path: deps/fmu.tar.gz
  test:
    needs:
      - build-fmus
    runs-on: ${{ matrix.os }}
    env:
      JULIA_NUM_THREADS: $(nproc)
    strategy:
      fail-fast: false
      matrix:
        julia-version: ['lts', 'pre', '1']
        julia-arch: [x64]
        os: [ubuntu-latest]
        experimental: [false]
    steps:
      # Checks-out your repository
      - name: Check out repository
        uses: actions/checkout@v4
      - name: "Set up Julia"
        uses: julia-actions/setup-julia@v2
        with:
          version: ${{ matrix.julia-version }}
      - uses: actions/cache@v3
        env:
          cache-name: cache-artifacts
        with:
          path: ~/.julia/artifacts
          key: ${{ runner.os }}-test-${{ env.cache-name }}-${{ hashFiles('**/Project.toml') }}
          restore-keys: |
            ${{ runner.os }}-test-${{ env.cache-name }}-
            ${{ runner.os }}-test-
            ${{ runner.os }}-
      - name: "Download FMUs"
        uses: actions/download-artifact@v3
        with:
          name: fmus
          path: deps
      - name: "Extract FMUs"
        run: tar -xzf deps/fmu.tar.gz -C deps
    # # Run the tests
      - name: "Run tests"
        uses: julia-actions/julia-runtest@v1
    # Preprocess Coverage
      - name: "Preprocess Coverage"
        uses: julia-actions/julia-processcoverage@v1

    # Run codecov
      - name: "Run CodeCov"
        uses: codecov/codecov-action@v3
        with:
          file: lcov.info
